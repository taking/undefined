# .github/workflows/build.yml
# Docker Build 진행
name: Docker Build

on:
  push:
    branches: ['main'] # main branch 에 push했을 때 workflow가 실행
    # tags: ['v*']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Source Code Checkout
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push (amd64, arm64)
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./backend.Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        platforms: linux/amd64,linux/arm64
        tags: ghcr.io/$/undefined-backend:latest
        # tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        

    - name: Build and push (amd64, arm64)
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./frontend.Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        platforms: linux/amd64,linux/arm64
        tags: ghcr.io/$/undefined-frontend:latest
        # tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}